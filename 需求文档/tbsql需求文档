json 形式存储数据
    表格列表：
        表格名称
            表格字段:一维数组,类型为STRING
            表格数据:二维数组,类型为STRING
        表格名称
            表格字段:一维数组,类型为STRING
            表格数据:二维数组,类型为STRING
        表格名称
            表格字段:一维数组,类型为STRING
            表格数据:二维数组,类型为STRING
    函数列表:
        函数名称:
            函数描述:
            函数参数:
            函数类型:MAP/REDUCE
            函数数据:
            函数范围:全局/私有
        函数名称:
            函数描述:
            函数参数:
            函数类型:MAP/REDUCE
            函数数据:
            函数范围:全局/私有
    模板列表:
        模板名称:
            模板描述:
            模板数据:
            模板范围:全局/私有
        模板名称:
            模板描述:
            模板数据:
            模板范围:全局/私有    
    运行记录:
        运行记录序号
            运行记录时间
            运行记录语句

        

{
    "表格列表": {
        "示例表格1": {
            "表格字段": ["字段1", "字段2", "字段3"],
            "表格数据": [
                ["数据1", "数据2", "数据3"],
                ["数据4", "数据5", "数据6"]
            ]
        }
    },
    "函数列表": {
        "示例函数1": {
            "函数描述": "这是一个示例函数",
            "函数参数": ["参数1", "参数2"],
            "函数类型": "MAP",
            "函数数据": "SELECT * FROM 示例表格1",
            "函数范围": "全局"
        }
    },
    "模板列表": {
        "示例模板1": {
            "模板描述": "这是一个示例模板",
            "模板数据": "SELECT * FROM 示例表格1",
            "模板范围": "全局"
        }
    },
    "运行记录": {
        "1": {
            "运行记录时间": "2024-01-01 00:00:00",
            "运行记录语句": "SELECT * FROM 示例表格1"
        }
    }
}




优化 @pandasutil.py 的set_data方法，让他传入的是 @yangben.json  中的 "表格列表“ 信息，确保 在EditableTableManager存储有全部的表格的信息tb_data的model，用户通过指定表名来获取，可以在EditableTableManager之上创建新的类来实现，也可以在EditableTableManager的基础上实现，保证不改变现有的功能的基础上，提高代码的稳定新和扩展性。